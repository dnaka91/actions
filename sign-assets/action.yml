name: "Sign Assets"
description: "Create signatures of release assets and attach them to the release"
inputs:
  token:
    description: "Token to authenticate against the GitHub API (ususally 'secrets.GITHUB_TOKEN')"
    required: true
  gpg_key:
    description: "The key to import and sign assets with"
    required: true
  gpg_passphrase:
    description: "Optional passphrase to use the GPG key"
    required: false
  globs:
    description: "Glob patterns to filter the assets to be signed"
    required: false
runs:
  using: composite
  steps:
    - name: Install sign-assets binary
      shell: bash
      run: |
        cd /tmp

        curl -LsSf https://github.com/dnaka91/actions/releases/download/latest/sign-assets-x86_64-unknown-linux-musl.tar.gz | tar -xf - -C /tmp
        curl -LsSf https://github.com/dnaka91/actions/releases/download/latest/checksums.b2 > /tmp/checksums.b2
        curl -LsSf https://github.com/dnaka91/actions/releases/download/latest/checksums.b2.asc > /tmp/checksums.b2.asc

        gpg --recv-keys 24B536EEDC7D1FBCFC678E786C63F836857F5C34
        gpg --verify /tmp/checksums.b2.asc

        b2sum -c --ignore-missing /tmp/checksums.b2

        mkdir -p $HOME/.local/sign-assets/bin
        mv /tmp/sign-assets $HOME/.local/sign-assets/bin/
        echo "$HOME/.local/sign-assets/bin" >> $GITHUB_PATH
    - name: Sign assets
      shell: bash
      run: |
        key=$(mktemp)
        echo "${{ inputs.gpg_key }}" > $key

        sign-assets \
          --token ${{ inputs.token }} \
          --gpg-key ${{ steps.store_key.outputs.key }} \
          --gpg-passphrase %{{ inputs.gpg_passphrase }} \
          ${{ inputs.globs }}
